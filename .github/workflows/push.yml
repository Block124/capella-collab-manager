# SPDX-FileCopyrightText: Copyright DB Netz AG and the capella-collab-manager contributors
# SPDX-License-Identifier: CC0-1.0
name: push

on:
  workflow_run:
    workflows: ["lint", "tests"]
    types:
      - completed

jobs:
  backend:
    runs-on: ubuntu-latest
    name: Build and push backend image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch version
        run: |
          python backend/generate_git_archival.py
      - uses: ./.github/workflows/docker-template.yml
        with:
          context: ./backend
          image: ghcr.io/dsd-dbs/capella-collab-manager/backend
  frontend:
    runs-on: ubuntu-latest
    name: Build and push frontend image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Fetch version
        run: |
          node frontend/fetch-version.ts
      - name: Prepare environment.prod.ts
        run: |
          cp frontend/src/environments/environment.ts frontend/src/environments/environment.prod.ts
      - uses: ./.github/workflows/docker-template.yml
        with:
          context: ./frontend
          image: ghcr.io/dsd-dbs/capella-collab-manager/frontend
  t4c-server-mock:
    runs-on: ubuntu-latest
    name: Build and push ${{ matrix.name }} image
    strategy:
      matrix:
        include:
          - name: t4c-server-mock
            image: ghcr.io/dsd-dbs/capella-collab-manager/t4c/server/mock
            context: mocks/t4c-server
          - name: t4c-license-mock
            image: ghcr.io/dsd-dbs/capella-collab-manager/t4c/licence/mock
            context: mocks/licence-server
          - name: docs
            image: ghcr.io/dsd-dbs/capella-collab-manager/docs
            context: ./docs/user
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: ./.github/workflows/docker-template.yml
        with:
          context: ${{ matrix.context }}
          image: ${{ matrix.image }}
