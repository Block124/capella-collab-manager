# SPDX-FileCopyrightText: Copyright DB Netz AG and the capella-collab-manager contributors
# SPDX-License-Identifier: CC0-1.0

name: helm

on:
  push:
    branches: ['**']
    tags: ["v*.*.*"]
  pull_request:
    branches: [master, staging]

jobs:
  validate-chart:
    runs-on: ubuntu-latest
    name: Validate helm chart with linter and kubernetes yaml schemas
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install helm
        uses: azure/setup-helm@v3
      - name: Install go
        uses: actions/setup-go@v3
      - name: Install kubeconform
        run: |
          go install github.com/yannh/kubeconform/cmd/kubeconform@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
      - name: Run helm lint
        run: |
          helm lint --strict ./helm
      - name: Validate chart with kubernetes schema
        run : |
          helm template ./helm | kubeconform -strict
  install-chart:
    runs-on: ubuntu-latest
    needs: [deploy-frontend-image, deploy-docs-image, deploy-backend-image, deploy-docker-images]
    name: Install chart in kind cluster
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install helm
        uses: azure/setup-helm@v3
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/not/used # Only required to export the tag, image name is not used
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
      - name: Resolve base image
        # Extract tag from docker metadata
        id: tag
        run: |
          export IMAGE=${{ steps.meta.outputs.tags }}
          echo "::set-output name=tag::${IMAGE##*:}"
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.3.0
      - name: Create sessions namespace
        run: |
          kubectl create namespace t4c-sessions
      - name: Add registry token
        run: |
          kubectl create secret docker-registry github \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }}
      - name: Add secret to default serviceaccount
        run: |
          kubectl patch serviceaccount default \
            -p '{"imagePullSecrets": [{"name": "github"}]}'
      - name: Install chart
        run: |
          export TAG=${{ steps.tag.outputs.tag }}

          helm install test \
          --set docker.registry.internal="ghcr.io/dsd-dbs/capella-collab-manager" \
          --set docker.images.frontend="/frontend:$TAG" \
          --set docker.images.backend="/backend:$TAG" \
          --set docker.images.docs="/docs:$TAG" \
          --set t4cServer.apis.usageStats="http://test-licence-server-mock:80/mock" \
          --set t4cServer.apis.restAPI="http://test-t4c-server-mock:80/mock/api/v1.0" \
          ./helm
      - name: Wait for all containers to be ready
        run: |
          kubectl wait --all --for=condition=Ready pods --timeout=5m
      - name: Print status of Pods
        if: always()
        run: |
          kubectl get pods
      - name: Describe deployments
        if: always()
        run: |
          kubectl describe deployment
      - name: Describe pods
        if: always()
        run: |
          kubectl describe pods
      - name: Print logs of backend container
        if: always()
        run: |
          kubectl logs deployment/test-backend
